spring:
  datasource:
    url: jdbc:mysql://47.104.168.116:3306/content_center
    hikari:
      username: root
      password: MyNewPass4!
      # >= 6.x: com.mysql.cj.jdbc.Driver
      # <= 5.x: com.mysql.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    nacos:
      discovery:
        # 指定nacos 的server地址
        server-addr: localhost:8848
        cluster-name: BJ
    sentinel:
      transport:
        #指定Sentinel控制台的地址
        dashboard: localhost:8080
      #关闭掉对Spring MVC端点的保护
      filter:
        enabled: false
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
      bindings:
        output:
          #用来指定Topic
          destination: stream-test-topic
        #这里的my-output一定要和我们自定义的接口MySource里面的@Output注解的值相一致
        my-output:
          destination: stream-my-topic
  application:
    # 服务名称尽量用-不要用下划线或者特殊字符
    name: content-center
server:
  port: 8010
#user-center:
#    ribbon:
#      NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
ribbon:
  eager-load:
    enabled: true
    clients: user-center
logging:
  level:
    com.itmuch.contentcenter.feignclient.UserCenterFeignClient: debug
    #这个日志级别设置一下，省的整合了spring-cloud-starter-stream-rocketmq之后打印日志过多
    com.alibaba.nacos: error
feign:
  client:
    config:
      # 指定全局日志级别的配置
      default:
        loggerLevel: full
  httpclient:
    #让Feign使用HttpClient做请求
    enabled: true
    #Feign的最大连接数
    max-connections: 200
    #Feign的单个路径最大连接数
    max-connections-per-route: 50
management:
  endpoints:
    web:
      #暴露所有的监控端点
      exposure:
        include: '*'